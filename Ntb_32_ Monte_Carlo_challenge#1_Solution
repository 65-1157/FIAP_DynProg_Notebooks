{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1N6B4Xu6vPa5arrCoCjRcSu-Aq_tqFcNq","timestamp":1714822914713},{"file_id":"1PlJQrgGH0Gt7dpARVkpUOPA0ITkNOb7Y","timestamp":1714820977633},{"file_id":"1F8tpmplHK0hFiKuUeeAeqnGnkJgY1jGQ","timestamp":1714349764697},{"file_id":"1nhMxaW7HbesLBacHoDtKwlBTct5ypga1","timestamp":1714347993508},{"file_id":"1_im2he2b1isPyvgVNnODtNUDWpSIIgIn","timestamp":1714054274868},{"file_id":"1nvYsaXOFLMeoDSxH9cJ5rke2zfRbwplG","timestamp":1713830067191},{"file_id":"1BtxETk7WPBi71SfjQfZRUpLXhGgCEZUP","timestamp":1713828030830},{"file_id":"108JSGXWV1tN3BLQefPIT3BxC73ubrds5","timestamp":1713550868926}],"authorship_tag":"ABX9TyPjuSfKJMW2ax7s7/ha6+yc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### This challenge deals with forecasting. The subject is budget plan, based on possible cases and some rules."],"metadata":{"id":"3tEk8qUQOHje"}},{"cell_type":"markdown","source":["#### We need to estimate the next year money amount to be paid for our labor force. They sell goods/services and get paid by commission, following a specific table (rules). The higher they sell, the higher they get paid."],"metadata":{"id":"LY7m3mCjOWoK"}},{"cell_type":"markdown","source":["## Problem = estimate the total money amount we need to paid them for the next year."],"metadata":{"id":"SLC8dubTOecq"}},{"cell_type":"markdown","source":["#### Commission rules: there is a table with the rates according to the amount sold, and it is not linear."],"metadata":{"id":"zqs7dZuzUP2x"}},{"cell_type":"markdown","source":["#### if the sold amount is between 100 and 3000, the commission rate is 0.5%. Between 3000 and 5000, the rate shall be 1.3%, and between 5000 and 6000, the rate equals to 2.8%."],"metadata":{"id":"hgnrbzA8UqLQ"}},{"cell_type":"markdown","source":["#### There is no past data to check yet, then we need to make assumptions: Taks force = 10 people. Each sell is a multiple of 100.00. Individually, the upper bound sell sum is 80.000.00 in a year."],"metadata":{"id":"mNTU3CM-VFB-"}},{"cell_type":"markdown","source":["## Challenge tasks: read the problem statement and sketch how to use the Monte Carlo technique to answer the main question. Use a task flow diagram addressing: inputs, actions and outcomes. Use Python coding to make a algorithm to forecast the amount to be paid to the task force in the next year."],"metadata":{"id":"QrPKx3PhW3a5"}},{"cell_type":"markdown","source":["### Hints: evaluate how the total amount may be made, which is a function of the total sells. This parameter is random in the end, because it depends on the labor force productivity."],"metadata":{"id":"YbgLm833XVyW"}},{"cell_type":"markdown","source":["### Guidance: make the assumptions with a Python function, set the number and value of the sells with a random command, simulate it several times, show the results by a graphic way."],"metadata":{"id":"vCM1Shd0X723"}},{"cell_type":"markdown","source":["#### Grades: 30% for the task flow diagram. 60% for the Python code. 10% for the graphic output."],"metadata":{"id":"ud3p52m6ZYOc"}},{"cell_type":"markdown","source":["#### Solution +++++++++++++++++++++++++++++++++++++++++++++"],"metadata":{"id":"yEArBhtwahYs"}},{"cell_type":"markdown","source":["## 01 - Import Libraries"],"metadata":{"id":"h9RHwlWNv6TJ"}},{"cell_type":"code","source":["pip install ggplot"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M1pOup910pIC","executionInfo":{"status":"ok","timestamp":1715646053989,"user_tz":180,"elapsed":19787,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"b3070e45-2367-422b-cdd4-401dda58df1a"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting ggplot\n","  Downloading ggplot-0.11.5-py2.py3-none-any.whl (2.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m16.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting brewer2mpl (from ggplot)\n","  Downloading brewer2mpl-1.4.1-py2.py3-none-any.whl (24 kB)\n","Requirement already satisfied: cycler in /usr/local/lib/python3.10/dist-packages (from ggplot) (0.12.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from ggplot) (3.7.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from ggplot) (1.25.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from ggplot) (2.0.3)\n","Requirement already satisfied: patsy>=0.4 in /usr/local/lib/python3.10/dist-packages (from ggplot) (0.5.6)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from ggplot) (1.11.4)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from ggplot) (1.16.0)\n","Requirement already satisfied: statsmodels in /usr/local/lib/python3.10/dist-packages (from ggplot) (0.14.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (1.2.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (4.51.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (24.0)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->ggplot) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->ggplot) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->ggplot) (2024.1)\n","Installing collected packages: brewer2mpl, ggplot\n","Successfully installed brewer2mpl-1.4.1 ggplot-0.11.5\n"]}]},{"cell_type":"code","source":["import random\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","# from ggplot import *\n","import time"],"metadata":{"id":"e2m7-LGsXoWo","executionInfo":{"status":"ok","timestamp":1715646055260,"user_tz":180,"elapsed":1272,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["## 02 -- Functions Definition"],"metadata":{"id":"4trExjWYwGSQ"}},{"cell_type":"code","source":["def commission(sales):\n","  # commission = amount to paid due to the sale done\n","  # sales = money value sold by the task force (workers)\n","  # Bottomline = Rules defined by the problem statement\n","    if sales >= 100 and sales <= 3000:\n","        return .005 # number to be considered or to provide\n","    elif sales > 3000 and sales <= 5000:\n","        return .013\n","    else:\n","        return .028"],"metadata":{"id":"9As3pmrybwPM","executionInfo":{"status":"ok","timestamp":1715646055260,"user_tz":180,"elapsed":3,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def simulate_commission(iterat):\n","  # function to do the Monte Carlo algorithm or technique\n","  # iterat = number of possible cases or iterations to simulate.\n","    amount = [] # empty list to be used later on\n","    for i in range(iterat): # loop to make the Monte Carlo iteration\n","      sales = random.sample(range(100, 80000, 100), 10) # simulation of a sale, according to the problem statement\n","      # using random numbers, it comes close to reality, avoiding bias\n","      data = pd.DataFrame({'Vendas': sales}) # organizing things within a dataframe\n","      data['Rates'] = data.Vendas.apply(commission) # take commission acording to the function.\n","      data['Commission'] = data.Vendas * data.Rates # the calculation of the money amount to be paid due to the sales and commissions.\n","      amount.append(\n","          [\n","          data.Vendas.sum().round(),\n","          data.Commission.sum().round(),\n","          ]\n","      )\n","      # special collection: two values at the same time, using round values.\n","    return amount # the result we need to present"],"metadata":{"id":"Oc7H-OtZdFkU","executionInfo":{"status":"ok","timestamp":1715646055260,"user_tz":180,"elapsed":2,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["def dindim (x, pos): # function to treat the decimals.\n","# x = input value, it can be anyone\n","# pos = output value, following a certain pattern\n","    if x >= 1e3:\n","        s = '${:1.1f}k'.format(x*1e-3)\n","    else:\n","        s = '${:1.0f}'.format(x*1e-2)\n","    return s"],"metadata":{"id":"4szH9MWXe9dG","executionInfo":{"status":"ok","timestamp":1715646055696,"user_tz":180,"elapsed":7,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def graph(a,b):\n","  plt.style.use('fivethirtyeight')\n","  plt.rcParams['figure.facecolor'] = 'lightblue'\n","  plt.grid(True, color = 'black', linestyle = '-')\n","\n","  plt.scatter(x = a, y = b, color = 'orange')"],"metadata":{"id":"rkuGVKPz12UK","executionInfo":{"status":"ok","timestamp":1715646055696,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["def simul(a,n):\n","  orange = pd.DataFrame({'Vendas': a}) # data organization with a single colum 'Vendas'.\n","  result = simulate_commission(n)\n","  result = pd.DataFrame.from_records(result, columns=['Vendas', 'Commission'])\n","  a = result.describe()\n","  a\n","  fig, ax = plt.subplots()\n","  ax.xaxis.set_major_formatter(dindim)\n","  result.Commission.plot(kind='hist', title='Amount: Comissoes Previstas',\n","                        color = 'lightgreen',bins = 50, edgecolor = 'black')\n","  plt.grid(True, color = 'purple', linestyle = '-')\n","  plt.show()\n","  a = result.describe()\n","  return a"],"metadata":{"id":"tllWM1Yd98IK","executionInfo":{"status":"ok","timestamp":1715646055697,"user_tz":180,"elapsed":7,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"1HOrTHE82jHJ","executionInfo":{"status":"ok","timestamp":1715646055697,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["## 03 -- Data generation or input"],"metadata":{"id":"mrQgA0ojysOS"}},{"cell_type":"code","source":["START = time.time()"],"metadata":{"id":"paIObHW11ngM","executionInfo":{"status":"ok","timestamp":1715646055697,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["### POSSIBLE CASES - SALES/VENDAS"],"metadata":{"id":"nEUNNqS-fzn6"}},{"cell_type":"markdown","source":[],"metadata":{"id":"gpcvX_G7fzmW"}},{"cell_type":"code","source":["sales = random.sample(range(100, 80000, 100), 10)\n","sales2 = random.sample(range(100,8000,100),10)\n","sales3 = random.sample(range(100,4000,100),10)\n","sales4 = random.sample(range(100,20000,100),10)\n","# randomness of the challenge: how the sells may be made.\n","# 100 = minimum value of a single sell. There is no sale like 90.00.\n","# 80000 = maximum value of selling in a year\n","# 100 = minimum sell step. There is no sale like 105.00.\n","# 10 = quantity of task force people"],"metadata":{"id":"7fSCrU0zevnX","executionInfo":{"status":"ok","timestamp":1715646055698,"user_tz":180,"elapsed":7,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["CASO =  sales"],"metadata":{"id":"8dM6FcOe5YxB","executionInfo":{"status":"ok","timestamp":1715646055698,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["orange = pd.DataFrame({'Vendas': CASO}) # data organization with a single colum 'Vendas'."],"metadata":{"id":"IdxSerJpbMvo","executionInfo":{"status":"ok","timestamp":1715646055698,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["orange.describe() # data overall check. Order of magnitude."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"_nMxhojhbn6w","executionInfo":{"status":"ok","timestamp":1715646055698,"user_tz":180,"elapsed":6,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"7f7233cd-3cb3-4ead-a699-6500f9e00d4d"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             Vendas\n","count     10.000000\n","mean   52700.000000\n","std    24849.994411\n","min     7300.000000\n","25%    51925.000000\n","50%    56550.000000\n","75%    71550.000000\n","max    77000.000000"],"text/html":["\n","  <div id=\"df-37235c75-edd3-4ce4-a85b-090bbcd99dc2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>52700.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>24849.994411</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7300.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>51925.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>56550.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>71550.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>77000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37235c75-edd3-4ce4-a85b-090bbcd99dc2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-37235c75-edd3-4ce4-a85b-090bbcd99dc2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-37235c75-edd3-4ce4-a85b-090bbcd99dc2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7d0ef540-130a-42ab-9fc4-9724213fe6ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d0ef540-130a-42ab-9fc4-9724213fe6ea')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7d0ef540-130a-42ab-9fc4-9724213fe6ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"orange\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28735.106134194084,\n        \"min\": 10.0,\n        \"max\": 77000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          52700.0,\n          56550.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["orange['Rates'] = orange.Vendas.apply(commission)\n","orange.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pq6164SEcneN","executionInfo":{"status":"ok","timestamp":1715646055979,"user_tz":180,"elapsed":286,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"830036e1-27bb-4a42-864c-6cbbd26100be"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Vendas  Rates\n","0   77000  0.028\n","1    7300  0.028\n","2   60300  0.028\n","3   74200  0.028\n","4   76200  0.028"],"text/html":["\n","  <div id=\"df-0d453d4e-0e36-49f1-84d2-ca990fe86744\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Rates</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>77000</td>\n","      <td>0.028</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7300</td>\n","      <td>0.028</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>60300</td>\n","      <td>0.028</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>74200</td>\n","      <td>0.028</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>76200</td>\n","      <td>0.028</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d453d4e-0e36-49f1-84d2-ca990fe86744')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d453d4e-0e36-49f1-84d2-ca990fe86744 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d453d4e-0e36-49f1-84d2-ca990fe86744');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c192591-b441-4649-8be0-e705dcaf5753\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c192591-b441-4649-8be0-e705dcaf5753')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c192591-b441-4649-8be0-e705dcaf5753 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"orange","summary":"{\n  \"name\": \"orange\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24849,\n        \"min\": 7300,\n        \"max\": 77000,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          52800,\n          7300,\n          52600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rates\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.657118196434064e-18,\n        \"min\": 0.028,\n        \"max\": 0.028,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.028\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["orange['Commission'] = orange.Vendas * orange.Rates # that´s the value to be paid, next year.\n","orange.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"gYMmalR1c-br","executionInfo":{"status":"ok","timestamp":1715646055979,"user_tz":180,"elapsed":5,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"f3e47389-d7a4-4373-eb9b-97003a0098d4"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Vendas  Rates  Commission\n","0   77000  0.028      2156.0\n","1    7300  0.028       204.4\n","2   60300  0.028      1688.4\n","3   74200  0.028      2077.6\n","4   76200  0.028      2133.6"],"text/html":["\n","  <div id=\"df-3e186829-cce8-4cc2-b3e8-23fad0301fa2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Rates</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>77000</td>\n","      <td>0.028</td>\n","      <td>2156.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7300</td>\n","      <td>0.028</td>\n","      <td>204.4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>60300</td>\n","      <td>0.028</td>\n","      <td>1688.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>74200</td>\n","      <td>0.028</td>\n","      <td>2077.6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>76200</td>\n","      <td>0.028</td>\n","      <td>2133.6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e186829-cce8-4cc2-b3e8-23fad0301fa2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e186829-cce8-4cc2-b3e8-23fad0301fa2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e186829-cce8-4cc2-b3e8-23fad0301fa2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4e52583b-f2ff-4543-87ae-bb2557afdb9a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e52583b-f2ff-4543-87ae-bb2557afdb9a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4e52583b-f2ff-4543-87ae-bb2557afdb9a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"orange","summary":"{\n  \"name\": \"orange\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24849,\n        \"min\": 7300,\n        \"max\": 77000,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          52800,\n          7300,\n          52600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rates\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.657118196434064e-18,\n        \"min\": 0.028,\n        \"max\": 0.028,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.028\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 695.7998435054596,\n        \"min\": 204.4,\n        \"max\": 2156.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          1478.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["### 3.1 - Data input visual check"],"metadata":{"id":"yiADsjYLzSSx"}},{"cell_type":"code","source":["graph(orange['Rates'], orange['Commission'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":456},"id":"2BoZteZ71x-z","executionInfo":{"status":"ok","timestamp":1715646056361,"user_tz":180,"elapsed":386,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"17d1c05f-4e5b-482a-d16a-f7bba40e34fb"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# p = ggplot(aes(x='Vendas'), data=orange)\n","# p + geom_histogram(binwidth=1)"],"metadata":{"id":"gU04FH2yzZOJ","executionInfo":{"status":"ok","timestamp":1715646056361,"user_tz":180,"elapsed":3,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["## 04 -- Monte Carlo running"],"metadata":{"id":"a8VU3DVhylHv"}},{"cell_type":"code","source":["result = simulate_commission(5000)\n","result = pd.DataFrame.from_records(result, columns=['Vendas', 'Commission'])\n","result"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"lPKOYuVTeBxO","executionInfo":{"status":"ok","timestamp":1715646075886,"user_tz":180,"elapsed":19528,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"5f516228-5c3c-4d03-cf0f-d72f94e92796"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Vendas  Commission\n","0     401200     11234.0\n","1     420800     11712.0\n","2     445800     12407.0\n","3     485500     13594.0\n","4     419200     11636.0\n","...      ...         ...\n","4995  473300     13191.0\n","4996  294300      8181.0\n","4997  392600     10993.0\n","4998  318900      8929.0\n","4999  437700     12256.0\n","\n","[5000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-18a82e51-3c05-4151-9494-361b86e05bb4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>401200</td>\n","      <td>11234.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>420800</td>\n","      <td>11712.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>445800</td>\n","      <td>12407.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>485500</td>\n","      <td>13594.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>419200</td>\n","      <td>11636.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4995</th>\n","      <td>473300</td>\n","      <td>13191.0</td>\n","    </tr>\n","    <tr>\n","      <th>4996</th>\n","      <td>294300</td>\n","      <td>8181.0</td>\n","    </tr>\n","    <tr>\n","      <th>4997</th>\n","      <td>392600</td>\n","      <td>10993.0</td>\n","    </tr>\n","    <tr>\n","      <th>4998</th>\n","      <td>318900</td>\n","      <td>8929.0</td>\n","    </tr>\n","    <tr>\n","      <th>4999</th>\n","      <td>437700</td>\n","      <td>12256.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18a82e51-3c05-4151-9494-361b86e05bb4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-18a82e51-3c05-4151-9494-361b86e05bb4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-18a82e51-3c05-4151-9494-361b86e05bb4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-803ec72e-c814-4d88-bb29-2b3747c6fbdb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-803ec72e-c814-4d88-bb29-2b3747c6fbdb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-803ec72e-c814-4d88-bb29-2b3747c6fbdb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_04765753-5e41-491e-8a0a-70bc5e01e848\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('result')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_04765753-5e41-491e-8a0a-70bc5e01e848 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('result');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"result","summary":"{\n  \"name\": \"result\",\n  \"rows\": 5000,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 72969,\n        \"min\": 176800,\n        \"max\": 661800,\n        \"num_unique_values\": 2385,\n        \"samples\": [\n          478900,\n          365900,\n          436600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2058.4226000469575,\n        \"min\": 4782.0,\n        \"max\": 18530.0,\n        \"num_unique_values\": 3220,\n        \"samples\": [\n          10606.0,\n          9968.0,\n          9253.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["result.describe().round()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"sYutLwZ0eTZq","executionInfo":{"status":"ok","timestamp":1715646075886,"user_tz":180,"elapsed":7,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"e13d5ea9-a542-4103-9f7c-28884d58dd00"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Vendas  Commission\n","count    5000.0      5000.0\n","mean   401157.0     11204.0\n","std     72969.0      2058.0\n","min    176800.0      4782.0\n","25%    351100.0      9782.0\n","50%    400900.0     11194.0\n","75%    451800.0     12634.0\n","max    661800.0     18530.0"],"text/html":["\n","  <div id=\"df-a3798ba2-5cf1-4a93-81ae-f4414cf1b827\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5000.0</td>\n","      <td>5000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>401157.0</td>\n","      <td>11204.0</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>72969.0</td>\n","      <td>2058.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>176800.0</td>\n","      <td>4782.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>351100.0</td>\n","      <td>9782.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>400900.0</td>\n","      <td>11194.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>451800.0</td>\n","      <td>12634.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>661800.0</td>\n","      <td>18530.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3798ba2-5cf1-4a93-81ae-f4414cf1b827')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a3798ba2-5cf1-4a93-81ae-f4414cf1b827 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a3798ba2-5cf1-4a93-81ae-f4414cf1b827');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7e95564a-8f4c-4fee-b95e-766a4a877d13\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7e95564a-8f4c-4fee-b95e-766a4a877d13')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7e95564a-8f4c-4fee-b95e-766a4a877d13 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"result\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 216751.16823725376,\n        \"min\": 5000.0,\n        \"max\": 661800.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          401157.0,\n          400900.0,\n          5000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5278.3288480892725,\n        \"min\": 2058.0,\n        \"max\": 18530.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11204.0,\n          11194.0,\n          5000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["## 05 -- Graph or first Dashboard proposal"],"metadata":{"id":"UGz5yrFxy8tD"}},{"cell_type":"code","source":["fig, ax = plt.subplots()\n","ax.xaxis.set_major_formatter(dindim)\n","result.Commission.plot(kind='hist', title='Amount: Comissoes Previstas',\n","                       color = 'lightgreen',bins = 50, edgecolor = 'black')\n","plt.grid(True, color = 'purple', linestyle = '-')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":479},"id":"8b6S_21veaiL","executionInfo":{"status":"ok","timestamp":1715646076499,"user_tz":180,"elapsed":618,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"6b309ba1-1ff3-4228-fc6b-35b4068f5e8b"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["N = 10000"],"metadata":{"id":"VI1i3yVpDgi9","executionInfo":{"status":"ok","timestamp":1715646076499,"user_tz":180,"elapsed":3,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["simul(sales,N)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":762},"id":"ADPJTo6oC54v","executionInfo":{"status":"ok","timestamp":1715646096621,"user_tz":180,"elapsed":20124,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"d3029b9a-d3c0-4b98-aa69-49fc0044dd7f"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              Vendas    Commission\n","count   10000.000000  10000.000000\n","mean   400545.210000  11186.675900\n","std     72529.510036   2045.380897\n","min    139100.000000   3743.000000\n","25%    351100.000000   9787.250000\n","50%    400900.000000  11200.000000\n","75%    450700.000000  12603.000000\n","max    674800.000000  18894.000000"],"text/html":["\n","  <div id=\"df-a9993bf4-fc34-4f69-ab30-de52344db31d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>400545.210000</td>\n","      <td>11186.675900</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>72529.510036</td>\n","      <td>2045.380897</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>139100.000000</td>\n","      <td>3743.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>351100.000000</td>\n","      <td>9787.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>400900.000000</td>\n","      <td>11200.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>450700.000000</td>\n","      <td>12603.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>674800.000000</td>\n","      <td>18894.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9993bf4-fc34-4f69-ab30-de52344db31d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9993bf4-fc34-4f69-ab30-de52344db31d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9993bf4-fc34-4f69-ab30-de52344db31d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-11fdb2d7-831a-4f18-b31d-c79d3132e783\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-11fdb2d7-831a-4f18-b31d-c79d3132e783')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-11fdb2d7-831a-4f18-b31d-c79d3132e783 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"simul(sales,N)\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 222510.5589249652,\n        \"min\": 10000.0,\n        \"max\": 674800.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          400545.21,\n          400900.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5225.784666812179,\n        \"min\": 2045.3808968895075,\n        \"max\": 18894.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11186.6759,\n          11200.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["simul(sales2,N)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":762},"id":"krVOLN_0_cVG","executionInfo":{"status":"ok","timestamp":1715646112440,"user_tz":180,"elapsed":15823,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"921e7298-9307-484a-94f2-93ec654dc0f3"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              Vendas    Commission\n","count   10000.000000  10000.000000\n","mean   399585.470000  11159.955900\n","std     71602.190171   2019.029465\n","min    163800.000000   4586.000000\n","25%    350100.000000   9763.000000\n","50%    399900.000000  11181.000000\n","75%    448925.000000  12555.000000\n","max    670800.000000  18782.000000"],"text/html":["\n","  <div id=\"df-0013085e-7cfe-4a63-886e-d857b61424e1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>399585.470000</td>\n","      <td>11159.955900</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>71602.190171</td>\n","      <td>2019.029465</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>163800.000000</td>\n","      <td>4586.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>350100.000000</td>\n","      <td>9763.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>399900.000000</td>\n","      <td>11181.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>448925.000000</td>\n","      <td>12555.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>670800.000000</td>\n","      <td>18782.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0013085e-7cfe-4a63-886e-d857b61424e1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0013085e-7cfe-4a63-886e-d857b61424e1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0013085e-7cfe-4a63-886e-d857b61424e1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-39916375-8252-41ab-9556-efeb05ef7a01\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39916375-8252-41ab-9556-efeb05ef7a01')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-39916375-8252-41ab-9556-efeb05ef7a01 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"simul(sales2,N)\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 218844.27166839968,\n        \"min\": 10000.0,\n        \"max\": 670800.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          399585.47,\n          399900.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5063.242877346902,\n        \"min\": 2019.0294646074597,\n        \"max\": 18782.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11159.9559,\n          11181.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":[],"metadata":{"id":"os8STrM6bbEu"}},{"cell_type":"code","source":["simul(sales3,N)"],"metadata":{"id":"9tEtAnIsicbG","colab":{"base_uri":"https://localhost:8080/","height":762},"executionInfo":{"status":"ok","timestamp":1715646130073,"user_tz":180,"elapsed":17635,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"b85c83c0-b69c-475a-c6ee-f423c1a4fef4"},"execution_count":23,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              Vendas    Commission\n","count   10000.000000  10000.000000\n","mean   400027.200000  11171.386100\n","std     72659.646273   2049.501452\n","min    105300.000000   2744.000000\n","25%    351200.000000   9797.000000\n","50%    399800.000000  11172.000000\n","75%    449000.000000  12551.250000\n","max    655800.000000  18362.000000"],"text/html":["\n","  <div id=\"df-87da4590-2cc8-4609-91cc-9a6478338c0a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>400027.200000</td>\n","      <td>11171.386100</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>72659.646273</td>\n","      <td>2049.501452</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>105300.000000</td>\n","      <td>2744.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>351200.000000</td>\n","      <td>9797.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>399800.000000</td>\n","      <td>11172.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>449000.000000</td>\n","      <td>12551.250000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>655800.000000</td>\n","      <td>18362.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-87da4590-2cc8-4609-91cc-9a6478338c0a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-87da4590-2cc8-4609-91cc-9a6478338c0a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-87da4590-2cc8-4609-91cc-9a6478338c0a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-efd9b968-f0b1-458f-b963-dc0d229bbb9d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-efd9b968-f0b1-458f-b963-dc0d229bbb9d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-efd9b968-f0b1-458f-b963-dc0d229bbb9d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"simul(sales3,N)\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 221950.32461728953,\n        \"min\": 10000.0,\n        \"max\": 655800.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          400027.2,\n          399800.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5271.208454996116,\n        \"min\": 2049.501451828443,\n        \"max\": 18362.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11171.3861,\n          11172.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["simul(sales4,N)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":762},"id":"XsQMlEWX_7D-","executionInfo":{"status":"ok","timestamp":1715646148255,"user_tz":180,"elapsed":18184,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"5494d8f6-bac1-4be5-8ee3-ca441032a547"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["              Vendas    Commission\n","count   10000.000000  10000.000000\n","mean   401406.360000  11210.836600\n","std     72692.161521   2049.596921\n","min    134500.000000   3625.000000\n","25%    350300.000000   9773.000000\n","50%    401450.000000  11213.000000\n","75%    451125.000000  12620.500000\n","max    663300.000000  18572.000000"],"text/html":["\n","  <div id=\"df-a9817ef3-d670-4d82-a279-ffa97bbcfac2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Vendas</th>\n","      <th>Commission</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>401406.360000</td>\n","      <td>11210.836600</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>72692.161521</td>\n","      <td>2049.596921</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>134500.000000</td>\n","      <td>3625.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>350300.000000</td>\n","      <td>9773.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>401450.000000</td>\n","      <td>11213.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>451125.000000</td>\n","      <td>12620.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>663300.000000</td>\n","      <td>18572.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9817ef3-d670-4d82-a279-ffa97bbcfac2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9817ef3-d670-4d82-a279-ffa97bbcfac2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9817ef3-d670-4d82-a279-ffa97bbcfac2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90daea11-d1b7-463b-a85e-ea091c0e0019\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90daea11-d1b7-463b-a85e-ea091c0e0019')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90daea11-d1b7-463b-a85e-ea091c0e0019 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"simul(sales4,N)\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Vendas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 220451.44676439167,\n        \"min\": 10000.0,\n        \"max\": 663300.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          401406.36,\n          401450.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Commission\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5169.626044487924,\n        \"min\": 2049.5969213126823,\n        \"max\": 18572.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11210.8366,\n          11213.0,\n          10000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["STOP = time.time()\n","DURATION = round(STOP - START, 2)\n","DURATION"],"metadata":{"id":"hXpPIdLTACCL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715646148255,"user_tz":180,"elapsed":2,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"8e00b433-b48a-4ba4-ec3e-da21758a40e2"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["92.8"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":[],"metadata":{"id":"gPtwhoKZgEiQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"lsUFc1V3gEg5"},"execution_count":null,"outputs":[]}]}