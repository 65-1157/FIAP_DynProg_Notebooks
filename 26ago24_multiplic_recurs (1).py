# -*- coding: utf-8 -*-
"""26ago24_Multiplic_recurs.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vZx9fsCCkX2EaDCNL8m5u47wk4U3u6u8

#### Este notebook versa sobre multiplicação de matrizes
"""

import time

def multiply_matrix(A,B):
  # A, B = input matrices
  rows_A,cols_A = len(A),len(A[0])
  rows_B,cols_B = len(B),len(B[0])
  # Confirmar condicao basica
  if cols_A != rows_B:
    raise ValueError("Nao se pode multiplicar matrizes assim")
  # Preencher matriz resposta com 1
  resultado = [[1 for _ in range(cols_B)] for _ in range(rows_A)]
  print(resultado)
  # Funcao recursiva para multiplicar
  def recurs_mult(i,j,k, soma = 0):
    # i = num linhas, j = num colunas, k = contador auxiliar, soma = valor da multiplic
    if k < cols_A:
      soma += A[i][k] * B[k][j]
      print(i,j,k,soma)
      return recurs_mult(i,j,k+1, soma)
    return soma

    # Aprontar matriz resultado
  resultado = [[recurs_mult(i,j,0) for j in range(cols_B)] for i in range(rows_A)]

  return resultado

# Exemplo de uso:
A = [[1, 2], [3, 4]]
B = [[5, 6], [7, 8]]
print(f"Resultado da multiplicação:\n{multiply_matrix(A, B)}")