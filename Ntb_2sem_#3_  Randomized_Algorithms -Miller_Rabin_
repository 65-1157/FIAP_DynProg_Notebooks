{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1y0XCnbAaBzvfKqb8jLNm2Mb6bDkTdEfG","timestamp":1722802271865},{"file_id":"1f_BYcC1XYhPHPL_MBca7RtEYHPwXWuST","timestamp":1722800179157},{"file_id":"1K6-qRUjfIN_2t2i04u8hmbKpV7Q1JYTz","timestamp":1722798404750},{"file_id":"13eU1xLcOm_mIpUIwwkrg7VZlTTDw2L15","timestamp":1715566364408},{"file_id":"1M7dHLGYkTgh0yWRVvnr-iwLuSbQsrOgi","timestamp":1715038817797},{"file_id":"1qD36qYTLJ7m3gCe_ZOvfmv_-27IRZZIV","timestamp":1715037070990},{"file_id":"1nFeofhYiGOzlVPuKXIrBeAVZJfqproor","timestamp":1714825513349},{"file_id":"1N6B4Xu6vPa5arrCoCjRcSu-Aq_tqFcNq","timestamp":1714822914713},{"file_id":"1PlJQrgGH0Gt7dpARVkpUOPA0ITkNOb7Y","timestamp":1714820977633},{"file_id":"1F8tpmplHK0hFiKuUeeAeqnGnkJgY1jGQ","timestamp":1714349764697},{"file_id":"1nhMxaW7HbesLBacHoDtKwlBTct5ypga1","timestamp":1714347993508},{"file_id":"1_im2he2b1isPyvgVNnODtNUDWpSIIgIn","timestamp":1714054274868},{"file_id":"1nvYsaXOFLMeoDSxH9cJ5rke2zfRbwplG","timestamp":1713830067191},{"file_id":"1BtxETk7WPBi71SfjQfZRUpLXhGgCEZUP","timestamp":1713828030830},{"file_id":"108JSGXWV1tN3BLQefPIT3BxC73ubrds5","timestamp":1713550868926}],"authorship_tag":"ABX9TyPX+B9YTCzrc6UC639fJXNT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Randomized algorithms are algorithms that use randomness as part of their logic to achieve efficiency and simplicity in solving computational problems."],"metadata":{"id":"MfdDzSsuuiYI"}},{"cell_type":"markdown","source":["### These algorithms have applications: computer science, cryptography, machine learning, and optimization. Here the example is the Miller-Rabin algorithm to detect prime numbers ."],"metadata":{"id":"nLQeUQery-wE"}},{"cell_type":"markdown","source":["### General Warning: Randomized algorithms may produce different outputs for the same input due to the involvement of randomness. This can improve code quality (time and memory use)."],"metadata":{"id":"a4YLEE1vzQ3B"}},{"cell_type":"markdown","source":["## Import libraries"],"metadata":{"id":"CHv2W-c0_zNP"}},{"cell_type":"code","source":["import numpy as np # library for number management\n","import pandas as pd\n","import time # library for time management\n","import random\n","import time\n","import matplotlib.pyplot as plt\n","import matplotlib as mpl"],"metadata":{"id":"uil9pI-Q_2UP","executionInfo":{"status":"ok","timestamp":1722803016211,"user_tz":180,"elapsed":485,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":["## Function_Definition"],"metadata":{"id":"F_ibVEr-FygS"}},{"cell_type":"code","source":["def m_rab(n, k):\n","  # n = given number\n","  # k = number of iterations\n","\n","    # 1. Trivial_initial_cases: 0, 1, 4 are not prime.\n","    if n <= 1 or n == 4:\n","        return False\n","\n","    # 2. Find d and s such that:\n","    # [n - 1 = (2^s * d)]\n","    # d is odd (odd = Ã­mpar)\n","    d = n - 1\n","    s = 0\n","    while d % 2 == 0:\n","        d //= 2\n","        s += 1\n","\n","    # 3. Perform k iterations of the test.\n","    for _ in range(k):\n","    # 4. Choose a random integer a between 2 and n-2.\n","        a = random.randint(2, n - 2)\n","\n","    # 5. Calculate x = a^d mod n.\n","        x = pow(a, d, n)\n","\n","    # 6. Check if x is 1 or n-1:\n","    #   If x is 1, the test is inconclusive.\n","    #   If x is n-1, the test is inconclusive.\n","        if x == 1 or x == n - 1:\n","            continue\n","\n","    # 7. Repeat steps 5 and 6 for s-1 times.\n","        for _ in range(s - 1):\n","            x = pow(x, 2, n)\n","            if x == n - 1:\n","                break\n","\n","    # 8. If x is not n-1 after s-1 iterations, n is composite (not prime)\n","        if x != n - 1:\n","            return False\n","\n","    # 9. If all iterations pass, n is probably prime.\n","    return True"],"metadata":{"id":"KA_tCE3nBWYe","executionInfo":{"status":"ok","timestamp":1722803016212,"user_tz":180,"elapsed":9,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["start = time.time()\n","iterations = [4,40,160,600]\n","n = 696729599\n","for z in iterations:\n"," print(z,m_rab(n,z))\n","stop = time.time()\n","formatter = mpl.ticker.EngFormatter()\n","interval = stop - start\n","inter_time = formatter(interval)\n","print('time to m_rab =', inter_time,'seconds')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qZ9Id-1829Sh","executionInfo":{"status":"ok","timestamp":1722803198346,"user_tz":180,"elapsed":379,"user":{"displayName":"Andre Marques","userId":"13386997495052440502"}},"outputId":"eaad2ffd-bdc9-47dd-f009-c41b3db88633"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["4 True\n","40 True\n","160 True\n","600 True\n","time to m_rab = 21.0209 m seconds\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"MHurgZyZ_tz3"},"execution_count":null,"outputs":[]}]}